#include "application/SysSignalsController.h"

#include <QDebug>

namespace                       spo   {
namespace                       sys   {

SysSignalsController::SysSignalsController()
{
  Initialisation();
}

SysSignalsController::~SysSignalsController()
{

}

sigaction_map_t &
SysSignalsController::GetActionsRef()
{
  return std::ref( m_ActionsMap );
}

sigaction_map_t &
SysSignalsController::GetActionsBakRef()
{
  return std::ref( m_ActionsBakMap );
}

void SysSignalsController::Initialisation() noexcept
{

  for( sigaction_map_t & current_map : { std::ref( m_ActionsMap ), std::ref( m_ActionsBakMap ) } )
  {
    for( auto key : UNIX_SIGNALS )
    {
      if( nullptr == ::memset( &( current_map[ key ] ),
                               0,
                               sizeof( current_map[ key ] ) ) )
      {
        //TODO: добавить обработку очискии структуры сигналов
      }
    }
  }
}

std::pair< sigaction_map_t::iterator, bool >
SysSignalsController::GetActionIterator
(
    sigaction_map_t::key_type signalNumber ,
    sigaction_map_t           & mapRef
)
{
  std::pair< sigaction_map_t::iterator, bool > retval;
  retval.first  = mapRef.find( signalNumber );
  retval.second = retval.first != mapRef.end();
  return retval;
}

}// namespace                 sys
}// namespace                 spo
